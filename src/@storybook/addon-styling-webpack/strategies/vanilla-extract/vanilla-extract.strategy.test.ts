import { describe, it, expect } from 'vitest';
import { printConfig, readConfig } from '@storybook/csf-tools';
import { resolve } from 'node:path';
import mockPackageManager from '../../../../fixtures/package-manager.fixture';

import { vanillaExtractStrategy } from './vanilla-extract.strategy';
import { SUPPORTED_BUILDERS, StorybookProjectMeta } from '../../../../utils/strategy.utils';

describe('CODEMOD: vanilla-extract configuration', () => {
    describe('PREDICATE: should project be configured for vanilla-extract?', () => {
        it('TRUE: it should return true when vanilla-extract is found in package.json', () => {
            const deps = {
                '@vanilla-extract/css': 'latest',
            };

            const result = vanillaExtractStrategy.predicate(deps);

            expect(result).toBeTruthy();
        });
        it('FALSE: it should return false when vanilla-extract is not found in package.json', () => {
            const deps = {
                bootstrap: 'latest',
            };

            const result = vanillaExtractStrategy.predicate(deps);

            expect(result).toBeFalsy();
        });
    });

    describe('MAIN: how should storybook be configured for vanilla-extract', () => {
        it('WEBPACK: addon-styling should be configured with postcss support', async () => {
            const mainConfig = await readConfig(
                resolve(__dirname, '../../../../fixtures/main.react-webpack5.fixture.ts'),
            );
            const meta: StorybookProjectMeta = {
                packageManager: mockPackageManager,
                framework: '@storybook/react-webpack5',
                builder: SUPPORTED_BUILDERS.WEBPACK,
            };

            vanillaExtractStrategy.main(mainConfig, meta);

            const result = printConfig(mainConfig).code;

            expect(result).toMatchInlineSnapshot(`
              "import type { StorybookConfig } from \\"@storybook/react-webpack5\\";
              import { VanillaExtractPlugin } from \\"@vanilla-extract/webpack-plugin\\";
              import MiniCssExtractPlugin from \\"mini-css-extract-plugin\\";
              const config: StorybookConfig = {
                stories: [\\"../stories/**/*.stories.@(js|jsx|ts|tsx)\\"],
                addons: [\\"@storybook/addon-essentials\\", ({
                  name: \\"@storybook/addon-styling-webpack\\",
                  options: {plugins: [new VanillaExtractPlugin(), new MiniCssExtractPlugin()],
                    rules: [{
                  test: /\\\\.css$/,
                  sideEffects: true,
                  use: [
                      require.resolve(\\"style-loader\\"),
                      {
                          loader: require.resolve(\\"css-loader\\"),
                          options: {
                              
                              
                          },
                      },
                  ],exclude: /\\\\.vanilla\\\\.css$/,
                },{
                // Targets only CSS files generated by vanilla-extract
                test: /\\\\.vanilla\\\\.css$/i,
                sideEffects: true,
                use: [
                  MiniCssExtractPlugin.loader,
                  {
                      loader: require.resolve('css-loader'),
                      options: {
                          // Required as image imports should be handled via JS/TS import statements
                          url: false,
                      },
                  },
                ],
                },],
                  }
                })],
                framework: {
                  name: \\"@storybook/react-webpack5\\",
                  options: {},
                },
                docs: {
                  autodocs: true,
                },
              };
              export default config;
              "
            `);
        });
    });
});
