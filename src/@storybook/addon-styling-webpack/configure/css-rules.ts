import dedent from 'dedent';
import { ConfigurationMap } from '../types';

const cssModuleOptions = ({ cssModules }: ConfigurationMap): string =>
    cssModules
        ? dedent`
    // Want to add more CSS Modules options? Read more here: https://github.com/webpack-contrib/css-loader#modules
    modules: {
        auto: true,
    },`
        : '';

const importLoadersOptions = ({ postcss }: ConfigurationMap): string =>
    postcss
        ? dedent`
    importLoaders: 1,`
        : '';

const postcssLoader = ({ postcss }: ConfigurationMap): string =>
    postcss
        ? dedent`
{
    loader: require.resolve("postcss-loader"),
    options: {
        implementation: require.resolve("postcss"),
    },
},`
        : '';

const ignoreVanillaExtract = ({ vanillaExtract }: ConfigurationMap): string =>
    vanillaExtract
        ? dedent`
exclude: /\.vanilla\.css$/,`
        : '';

const vanillaExtractRule = ({ vanillaExtract }: ConfigurationMap): string =>
    vanillaExtract
        ? dedent`
    {
        // Targets only CSS files generated by vanilla-extract
        test: /\.vanilla\.css$/i,
        sideEffects: true,
        use: [
            MiniCssExtractPlugin.loader,
            {
                loader: require.resolve('css-loader'),
                options: {
                    // Required as image imports should be handled via JS/TS import statements
                    url: false,
                },
            },
        ],
    },`
        : '';

export const generateCssRules = (configMap: ConfigurationMap): string => dedent`
    {
        test: /\.css$/,
        sideEffects: true,
        use: [
            require.resolve("style-loader"),
            {
                loader: require.resolve("css-loader"),
                options: {
                    ${cssModuleOptions(configMap)}
                    ${importLoadersOptions(configMap)}
                },
            },${postcssLoader(configMap)}
        ],${ignoreVanillaExtract(configMap)}
    },${vanillaExtractRule(configMap)}
    `;
